//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VOI.SISAC.Business.VOINotifications {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericResponse", Namespace="http://schemas.datacontract.org/2004/07/WCFVOINotifications.Response")]
    [System.SerializableAttribute()]
    public partial class GenericResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((this.ErrorField.Equals(value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VOINotifications.IServiceNotifications")]
    public interface IServiceNotifications {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/GetAuthenticationToken", ReplyAction="http://tempuri.org/IServiceNotifications/GetAuthenticationTokenResponse")]
        string GetAuthenticationToken(string User, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/GetAuthenticationToken", ReplyAction="http://tempuri.org/IServiceNotifications/GetAuthenticationTokenResponse")]
        System.Threading.Tasks.Task<string> GetAuthenticationTokenAsync(string User, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendEmail", ReplyAction="http://tempuri.org/IServiceNotifications/SendEmailResponse")]
        VOI.SISAC.Business.VOINotifications.GenericResponse SendEmail(string eMailsAddressTo, string bodyMessage, bool isHTML, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendEmail", ReplyAction="http://tempuri.org/IServiceNotifications/SendEmailResponse")]
        System.Threading.Tasks.Task<VOI.SISAC.Business.VOINotifications.GenericResponse> SendEmailAsync(string eMailsAddressTo, string bodyMessage, bool isHTML, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendEmailSubject", ReplyAction="http://tempuri.org/IServiceNotifications/SendEmailSubjectResponse")]
        VOI.SISAC.Business.VOINotifications.GenericResponse SendEmailSubject(string Subject, string eMailsAddressTo, string bodyMessage, bool isHTML, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendEmailSubject", ReplyAction="http://tempuri.org/IServiceNotifications/SendEmailSubjectResponse")]
        System.Threading.Tasks.Task<VOI.SISAC.Business.VOINotifications.GenericResponse> SendEmailSubjectAsync(string Subject, string eMailsAddressTo, string bodyMessage, bool isHTML, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceNotificationsChannel : VOI.SISAC.Business.VOINotifications.IServiceNotifications, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceNotificationsClient : System.ServiceModel.ClientBase<VOI.SISAC.Business.VOINotifications.IServiceNotifications>, VOI.SISAC.Business.VOINotifications.IServiceNotifications {
        
        public ServiceNotificationsClient() {
        }
        
        public ServiceNotificationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceNotificationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNotificationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNotificationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAuthenticationToken(string User, string Password) {
            return base.Channel.GetAuthenticationToken(User, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthenticationTokenAsync(string User, string Password) {
            return base.Channel.GetAuthenticationTokenAsync(User, Password);
        }
        
        public VOI.SISAC.Business.VOINotifications.GenericResponse SendEmail(string eMailsAddressTo, string bodyMessage, bool isHTML, string token) {
            return base.Channel.SendEmail(eMailsAddressTo, bodyMessage, isHTML, token);
        }
        
        public System.Threading.Tasks.Task<VOI.SISAC.Business.VOINotifications.GenericResponse> SendEmailAsync(string eMailsAddressTo, string bodyMessage, bool isHTML, string token) {
            return base.Channel.SendEmailAsync(eMailsAddressTo, bodyMessage, isHTML, token);
        }
        
        public VOI.SISAC.Business.VOINotifications.GenericResponse SendEmailSubject(string Subject, string eMailsAddressTo, string bodyMessage, bool isHTML, string token) {
            return base.Channel.SendEmailSubject(Subject, eMailsAddressTo, bodyMessage, isHTML, token);
        }
        
        public System.Threading.Tasks.Task<VOI.SISAC.Business.VOINotifications.GenericResponse> SendEmailSubjectAsync(string Subject, string eMailsAddressTo, string bodyMessage, bool isHTML, string token) {
            return base.Channel.SendEmailSubjectAsync(Subject, eMailsAddressTo, bodyMessage, isHTML, token);
        }
    }
}
