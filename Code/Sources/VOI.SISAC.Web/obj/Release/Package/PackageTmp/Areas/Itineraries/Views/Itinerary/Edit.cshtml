@model VOI.SISAC.Web.Models.VO.Itineraries.ItineraryVO

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //Combos
    var airlines = this.ViewBag.Airlines as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>;
    var equipmentNumbers = this.ViewBag.EquipmentNumbers as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>;
    var airportDeparture = this.ViewBag.AirportDeparture as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>;
    var airportArrival = this.ViewBag.AirportArrival as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>;
    var arrivalStation = airportArrival.Where(c => c.Id == Model.ArrivalStation).FirstOrDefault();
    var departureStation = airportDeparture.Where(c => c.Id == Model.DepartureStation).FirstOrDefault();

    //edit arrival or not
    bool editArrival = false;
    editArrival = this.ViewBag.EditArrival;

    var cultureForm = VOI.SISAC.Web.Helpers.CultureHelper.GetCurrentCulture();
}

<div class="container">
    @Html.Partial("_AlertView")
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <p class="subtitle_h3_black">@VOI.SISAC.Web.Resources.Resource.ItineraryTitle</p>
        <p class="subtitle_h3_ancillarie">@VOI.SISAC.Web.Resources.Resource.Edit</p>
    </div>

    @if (Model != null)
    {
        @Html.Partial("_FlightInformation", Model)
    }
    <br />

    @using (Html.BeginForm())
    {

        @Html.AntiForgeryToken()

        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" id="headingTwo">
                            <h4 class="panel-title subtitle_h6">
                                <strong>@VOI.SISAC.Web.Resources.Resource.ItineraryTitle</strong>
                            </h4>
                        </div>
                        <div id="dvAC">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.HiddenFor(model => model.ItineraryKey)
                                    @Html.LabelFor(model => model.AirlineCode, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    @Html.EditorFor(model => model.AirlineCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @*@Html.ValidationMessageFor(model => model.AirlineCode, "", new { @class = "text-danger text-danger-error" })*@
                                </div>

                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.LabelFor(model => model.FlightNumber, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    @Html.EditorFor(model => model.FlightNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @*@Html.ValidationMessageFor(model => model.FlightNumber, "", new { @class = "text-danger" })*@
                                </div>

                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.LabelFor(model => model.EquipmentNumber, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    <div class="styled-select">
                                        @Html.DropDownListFor(model => model.EquipmentNumber, equipmentNumbers.Select(h => new SelectListItem
                                   {
                                       Text = h.Description,
                                       Value = h.Id
                                   }), Resource.SelectItem, new { htmlAttributes = new { @class = "inputForm form-control combobox" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.EquipmentNumber, "", new { @class = "text-danger text-danger-error" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.LabelFor(model => model.DepartureDate, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    @Html.EditorFor(model => model.DepartureDate, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = Resource.FormatDate, @readonly = "readonly" } })
                                    @*@Html.ValidationMessageFor(model => model.DepartureDate, "", new { @class = "text-danger text-danger-error" })*@
                                </div>

                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.LabelFor(model => model.DepartureStation, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    <input type="hidden" class="form-control" id="DepartureStation" name="DepartureStation" value="@departureStation.Id">
                                    <input type="text" class="form-control" id="DepartureStationFront" name="DepartureStationFront" value="@departureStation.CodeAndDescription" readonly />
                                    @Html.ValidationMessageFor(model => model.DepartureStation, "", new { @class = "text-danger text-danger-error" })
                                </div>

                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.LabelFor(model => model.ArrivalDate, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    @Html.EditorFor(model => model.ArrivalDate, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = Resource.FormatDate, @readonly = "readonly" } })
                                    @*@Html.ValidationMessageFor(model => model.ArrivalDate, "", new { @class = "text-danger text-danger-error" })*@
                                </div>

                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @if (editArrival == true)
                                    {
                                        @Html.LabelFor(model => model.ArrivalStation, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                        <div class="styled-select">
                                            @Html.DropDownListFor(model => model.ArrivalStation, airportArrival.Select(h => new SelectListItem
                                       {
                                           Text = h.CodeAndDescription,
                                           Value = h.Id
                                       }), Resource.SelectItem, new { htmlAttributes = new { @class = "inputForm form-control" } })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ArrivalStation, "", new { @class = "text-danger text-danger-error" })
                                    }
                                    else
                                    {
                                        @Html.LabelFor(model => model.ArrivalStation, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                        <input type="hidden" class="form-control" id="ArrivalStation" name="ArrivalStation" value="@arrivalStation.Id">
                                        <input type="text" class="form-control" id="ArrivalStationFront" name="ArrivalStationFront" value="@arrivalStation.CodeAndDescription" readonly>
                                        @Html.ValidationMessageFor(model => model.ArrivalStation, "", new { @class = "text-danger text-danger-error" })
                                    }
                                </div>

                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    @Html.LabelFor(model => model.ArrivalTime, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                                    @Html.EditorFor(model => model.ArrivalTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.ArrivalTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <input onclick="@("location.href='" + @Url.Action("Index", "Itinerary") + "'")" type="reset" class="btnVolaris" value="@Resource.Back" />
                            <input type="submit" value=@Resource.Save class="btnVolaris" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrapdtimejs")
    @Scripts.Render("~/bundles/JSDateTimeValidate")
    @Scripts.Render("~/bundles/CommonFunctions")

    <script type="text/javascript">
        var currentLang = '@cultureForm.ToString()';
    </script>

    <script>
        $(function () {
            $('#DepartureTime, #ArrivalTime').datetimepicker({
                format: 'HH:mm'
            });
        });
    </script>
}
