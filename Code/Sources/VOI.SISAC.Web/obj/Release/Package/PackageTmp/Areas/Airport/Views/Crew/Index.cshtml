@model IEnumerable<VOI.SISAC.Web.Models.VO.Airport.CrewVO>

@{
    ViewBag.Title = @VOI.SISAC.Web.Resources.Resource.CrewTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cultureForm = VOI.SISAC.Web.Helpers.CultureHelper.GetCurrentCulture();
}

@Styles.Render("~/Content/bootstraptablecss")

@Styles.Render("~/Content/bootstraptablecss")
<div class="container">
    @Html.Partial("_AlertView")
    @Html.Partial("Partial/FileUploadModal")
    <h2 class="subtitle_h3_black">@VOI.SISAC.Web.Resources.Resource.CrewTitle</h2>
    <div id="toolbar">
        @if (User.IsInRole("CREW-ADD"))
        {
            <button type="button"
                    class="btn btn-default"
                    name="Add"
                    title="@VOI.SISAC.Web.Resources.Resource.Add"
                    onclick="location.href='@Url.Action("Create", "Crew")'">
                <i class="fa fa-plus"></i>&nbsp;@VOI.SISAC.Web.Resources.Resource.Add
            </button>
        }
        @if (User.IsInRole("CREW-UPLF"))
        {
            <button data-toggle="modal"
                    data-target="#UploadCrewModal"
                    type="button"
                    class="btn btn-default"
                    name="@Resource.UploadFile"
                    title="@Resource.UploadFile">
                <i class="fa fa-upload"></i>&nbsp; @Resource.UploadFile
            </button>
        }
        <br />
    </div>

@using (Html.BeginForm("Index", "Crew", FormMethod.Post, new { name = "formCrew", id = "formCrew" }))
{
    <table id="tbCrew"
           data-toolbar="#toolbar"
           class="table"
           data-locale="@cultureForm.ToString()"
           data-toggle="table"
           data-show-export="true"
           data-export-types="['excel']"
           data-show-columns="true"
           data-search="true"
           data-show-toggle="true"
           data-show-pagination-switch="true"
           data-mobile-responsive="true"
           data-check-on-init="true"
           data-url="@Url.Action("GetCrewPaged", "Crew")"
           data-pagination="true"
           data-query-params="queryParams"
           data-side-pagination="server"
           data-query-params-type=""
           data-page-list="[5,10,20,50,100]">
        <thead>
            <tr>
                <th data-field="Acctions" data-align="center" data-halign="center" data-formatter="actionsButtons">
                    <strong>@VOI.SISAC.Web.Resources.Resource.Actions</strong>
                </th>
                <th data-field="CrewTypeID" data-halign="left" data-align="left" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.CrewTypeID)</strong>
                </th>
                <th data-field="LastName" data-halign="left" data-align="left" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.LastName)</strong>
                </th>
                <th data-field="FirstName" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.FirstName)</strong>
                </th>
                <th data-field="MiddleName" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.MiddleName)</strong>
                </th>
                <th data-field="Gender" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.Gender)</strong>
                </th>

                <th data-field="CountryOfResidence" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.CountryOfResidence)</strong>
                </th>
                <th data-field="PlaceBirthCity" data-halign="left" data-align="left" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.PlaceBirthCity)</strong>
                </th>
                <th data-field="State" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.State)</strong>
                </th>
                <th data-field="CountryOfBird" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.CountryOfBird)</strong>
                </th>
                <th data-field="DateOfBird" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.DateOfBird)</strong>
                </th>

                <th data-field="Citizenship" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.Citizenship)</strong>
                </th>
                <th data-field="StatusOnBoard" data-halign="left" data-align="left" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.StatusOnBoardCode)</strong>
                </th>
                <th data-field="HomeAddress" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.HomeAddress)</strong>
                </th>
                <th data-field="HomeAddressCity" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.HomeAddressCity)</strong>
                </th>
                <th data-field="HomeAddressState" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.HomeAddressState)</strong>
                </th>

                <th data-field="HomeAddressZipCode" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.HomeAddressZipCode)</strong>
                </th>
                <th data-field="HomeAddressCountry" data-halign="left" data-align="left" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.HomeAddressCountry)</strong>
                </th>
                <th data-field="PassportNumber" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.PassportNumber)</strong>
                </th>
                <th data-field="PassportCountryIssuance" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.PassportCountryIssuance)</strong>
                </th>

                <th data-field="PassportExpiration" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.PassportExpiration)</strong>
                </th>
                <th data-field="LicenceNumber" data-halign="left" data-align="left" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.LicenceNumber)</strong>
                </th>
                <th data-field="LicenceCountryIssuance" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.LicenceCountryIssuance)</strong>
                </th>
                <th data-field="LicenceNumberExpiration" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.LicenceNumberExpiration)</strong>
                </th>

                <th data-field="NickName" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.NickName)</strong>
                </th>
                <th data-field="NickNameSabre" data-halign="left" data-align="left" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.NickNameSabre)</strong>
                </th>
                <th data-field="VisaExpirationDate" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.VisaExpirationDate)</strong>
                </th>
                <th data-field="EmployeeNumber" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.EmployeeNumber)</strong>
                </th>

                <th data-field="CreatedDate" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.CreatedDate)</strong>
                </th>
            </tr>
        </thead>
    </table>
}

    <!-- context menu -->
    <ul id="context-menu" class="dropdown-menu">
        @if (User.IsInRole("CREW-UPD"))
        {
            <li data-item="@VOI.SISAC.Web.Resources.Resource.Edit"><a><i class="fa fa-pencil fa-fw"></i>&nbsp;@VOI.SISAC.Web.Resources.Resource.Edit</a></li>
        }

        @if (User.IsInRole("CREW-DEL"))
        {
            <li data-item="@VOI.SISAC.Web.Resources.Resource.Delete"><a><i class="fa fa-trash-o fa-fw"></i>&nbsp;@VOI.SISAC.Web.Resources.Resource.Delete</a></li>
        }
    </ul>

    @*@(Html.BootstrapTable<VOI.SISAC.Web.Models.VO.Airport.CrewVO>(Url.Action("GetCrewPaged"), TablePaginationOption.server)

    .Apply(TableOption.showPaginationSwitch, TableOption.showToggle, TableOption.showColumns, TableOption.search)
    .ApplyToTable("data-show-export", "true")
    .ApplyToTable("data-export-types", "['excel']")
    .ApplyToTable("data-export-data-type", "all")
    .Apply(TableOption.toolbar, "#toolbar")
    .Apply(TableOption.classes, "table")
    //.Apply(m => m.CrewTypeID, ColumnOption.sortable, ColumnOption.align_center, ColumnOption.halign_center)
    .Apply(m => m.CrewTypeID, ColumnOption.sortable)
    .Apply(m => m.LastName, ColumnOption.sortable)
    .Apply(m => m.CrewID, ColumnOption.visible, false)
    .Apply(m => m.PlaceBirthCity, ColumnOption.visible, false)
    .Apply(m => m.State, ColumnOption.visible, false)
    .Apply(m => m.CountryOfBird, ColumnOption.visible, false)
    .Apply(m => m.DateOfBird, ColumnOption.visible, false)
    .Apply(m => m.Citizenship, ColumnOption.visible, false)
    .Apply(m => m.StatusOnBoardCode, ColumnOption.visible, false)
    .Apply(m => m.HomeAddress, ColumnOption.visible, false)
    .Apply(m => m.HomeAddressCity, ColumnOption.visible, false)
    .Apply(m => m.HomeAddressState, ColumnOption.visible, false)
    .Apply(m => m.HomeAddressZipCode, ColumnOption.visible, false)
    .Apply(m => m.HomeAddressCountry, ColumnOption.visible, false)
    .Apply(m => m.PassportNumber, ColumnOption.visible, false)
    .Apply(m => m.PassportCountryIssuance, ColumnOption.visible, false)
    .Apply(m => m.PassportExpiration, ColumnOption.visible, false)
    //.Apply(m => m.LicenceNumber, ColumnOption.visible, false)
    //.Apply(m => m.LicenceCountryIssuance, ColumnOption.visible, false)
    //.Apply(m => m.LicenceNumberExpiration, ColumnOption.visible, false)
    .Apply(m => m.NickName, ColumnOption.visible, false)
    .Apply(m => m.NickNameSabre, ColumnOption.visible, false)
    .Apply(m => m.VisaExpirationDate, ColumnOption.visible, false)
    .Apply(m => m.EmployeeNumber, ColumnOption.visible, false)
    .Apply(m => m.CreatedDate, ColumnOption.visible, false)
    .Apply(TableOption.pageSize, 10)

    )*@

</div>
<br />
@Scripts.Render("~/bundles/bootstrapTable")
@Scripts.Render("~/bundles/bootstrapTablePlugins")
@Scripts.Render("~/bundles/ExportTable")
@Scripts.Render("~/bundles/BootstrapInputFile")
@Scripts.Render("~/bundles/BootstrapContextMenu")

<script>
    //Take querystrings and send back to server REST
    function queryParams(params) {
        return {
            pageNumber: params.pageNumber,
            pageSize: params.pageSize
        };
    }

    function actionsButtons (value, row, index) {
        return '<div class="btn-group btn-group-sm"> <button type="button" class="btn btn-default dropdown-toggle menuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="caret"></span> <span class="sr-only">Toggle Dropdown</span> </button> </div>';
    }

    $('#tbCrew').bootstrapTable({
        contextMenu: '#context-menu',
        contextMenuButton: '.menuButton',
        contextMenuAutoClickRow: true,
        contextMenuTrigger: 'right',
        onContextMenuItem: function (row, $el) {
            if ($el.data("item") == '@VOI.SISAC.Web.Resources.Resource.Edit') {
                var url = '@Url.Action("Edit", "Crew")';
                url = url.concat('?id=' + row.CrewID);
                window.location = url;
            }
            if ($el.data("item") == '@VOI.SISAC.Web.Resources.Resource.Delete') {
                var url = '@Url.Action("Delete", "Crew")';
                url = url.concat('?id=' + row.CrewID);
                window.location = url;
            }
        }
    })
</script>