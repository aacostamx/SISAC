@model VOI.SISAC.Web.Models.VO.Process.JetFuelPolicyControlParamsVO
@{
    this.Layout = "~/Views/Shared/_Layout.cshtml";
    this.ViewBag.Title = VOI.SISAC.Web.Resources.Resource.CreatePolicy;
    var process = this.ViewBag.Process != null ? this.ViewBag.Process as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto> : new List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>();
    var airline = this.ViewBag.Airline != null ? this.ViewBag.Airline as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto> : new List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>();
    var airport = this.ViewBag.Airport != null ? this.ViewBag.Airport as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto> : new List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>();
    var service = this.ViewBag.Service != null ? this.ViewBag.Service as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto> : new List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>();
    var provider = this.ViewBag.Provider != null ? this.ViewBag.Provider as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto> : new List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>();
    var cultureForm = VOI.SISAC.Web.Helpers.CultureHelper.GetCurrentCulture();
}

@Styles.Render("~/Content/bootstrapdtimecss")
@Styles.Render("~/bundles/BootstrapMultiselectCSS")
@Styles.Render("~/bundles/SweetAlertCSS")

<div class="container">
    @Html.Partial("_AlertView")
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <p class="subtitle_h3_black">@VOI.SISAC.Web.Resources.Resource.CreatePolicy</p>
    </div>

    <div class="form-horizontal">
        @using (Html.BeginForm("Create", "CreatePolicy", new { Area = "Process" }, FormMethod.Post, new { id = "CalculationResultForm" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="subtitle_h5 control-label required-field">@VOI.SISAC.Web.Resources.Resource.Airline</label>
                    <div>
                        @Html.DropDownList("AirlineCode", airline.Select(h => new SelectListItem
                        {
                            Text = h.DescriptionAndCode,
                            Value = h.Id
                        }), new { @class = "inputForm form-control" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.Airport</label>
                    <div>
                        @Html.DropDownList("AirportCodes", airport.Select(h => new SelectListItem
                        {
                            Text = h.CodeAndDescription,
                            Value = h.Id
                        }), new { @class = "inputForm form-control", @multiple = "multiple" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.Service</label>
                    <div>
                        @Html.DropDownList("ServiceCodes", service.Select(h => new SelectListItem
                        {
                            Text = h.DescriptionAndCode,
                            Value = h.Id
                        }), new { @class = "inputForm form-control", @multiple = "multiple" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.Provider</label>
                    <div>
                        @Html.DropDownList("ProviderCodes", provider.Select(h => new SelectListItem
                        {
                            Text = h.DescriptionAndCode,
                            Value = h.Id
                        }), new { @class = "inputForm form-control", @multiple = "multiple" })
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                    <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.RealPeriod</label>
                    <div>
                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                            <label class="subtitle_h5 control-label required-field">@VOI.SISAC.Web.Resources.Resource.StartDate</label>
                            @Html.EditorFor(model => model.StartDateReal, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = @VOI.SISAC.Web.Resources.Resource.FormatDate } })
                            @Html.ValidationMessage("StartDateReal", new { @class = "text-danger text-danger-error" })
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                            <label class="subtitle_h5 control-label required-field">@VOI.SISAC.Web.Resources.Resource.EndDate</label>
                            @Html.EditorFor(model => model.EndDateReal, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = @VOI.SISAC.Web.Resources.Resource.FormatDate } })
                            @Html.ValidationMessage("EndDateReal", new { @class = "text-danger text-danger-error" })
                        </div>
                    </div>
                </div>

                <div id="ComplementaryDate" name="ComplementaryDate" class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                    <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.ComplementaryPeriod</label>
                    <div>
                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                            <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.StartDate</label>                            
                            @Html.EditorFor(model => model.StartDateComplementary, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = @VOI.SISAC.Web.Resources.Resource.FormatDate, @readonly="true" } })
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                            <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.EndDate</label>
                            @Html.EditorFor(model => model.EndDateComplementary, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = @VOI.SISAC.Web.Resources.Resource.FormatDate, @readonly="true" } })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="subtitle_h5 control-label required-field">@VOI.SISAC.Web.Resources.Resource.BaseDate</label>
                    @Html.EditorFor(model => model.DateBaseline, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = @VOI.SISAC.Web.Resources.Resource.FormatDate } })
                    @Html.ValidationMessage("DateBaseline", new { @class = "text-danger text-danger-error" })
                </div>
                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="subtitle_h5 control-label required-field">@VOI.SISAC.Web.Resources.Resource.ValueDate</label>
                    @Html.EditorFor(model => model.DateValue, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = @VOI.SISAC.Web.Resources.Resource.FormatDate } })
                    @Html.ValidationMessage("DateValue", new { @class = "text-danger text-danger-error" })
                </div>
                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <label class="subtitle_h5 control-label required-field">@VOI.SISAC.Web.Resources.Resource.PostingDate</label>
                    @Html.EditorFor(model => model.DatePosting, new { htmlAttributes = new { @class = "form-control ClassDate", @placeholder = @VOI.SISAC.Web.Resources.Resource.FormatDate } })
                    @Html.ValidationMessage("DatePosting", new { @class = "text-danger text-danger-error" })
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <label class="subtitle_h5 control-label required-field">@VOI.SISAC.Web.Resources.Resource.HeaderText</label>
                    @Html.TextAreaFor(model => model.HeaderText, 1, 1000, new { @class = "form-control", @onclick="return commonFunctions.validarMaxLengthAlfanumericoCaracteresEspeciales(event, this, 5, 1);", @onkeyup="return commonFunctions.validarMaxLengthAlfanumericoCaracteresEspeciales(event, this, 5, 1)" })
                    @Html.ValidationMessage("HeaderText", new { @class = "text-danger text-danger-error" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <label class="subtitle_h5 control-label">@VOI.SISAC.Web.Resources.Resource.ItemText</label>
                    @Html.TextAreaFor(model => model.ItemText, 1, 1000, new { @class = "form-control", @onclick="return commonFunctions.validarMaxLengthAlfanumericoCaracteresEspeciales(event, this, 30, 1);", @onkeyup="return commonFunctions.validarMaxLengthAlfanumericoCaracteresEspeciales(event, this, 30, 1)" })
                    @Html.ValidationMessage("ItemText", new { @class = "text-danger text-danger-error" })
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <button id="btnSavePolicy" onclick="CreatePolicyController.postForm();" type="button" class="btn btn-default" title="@VOI.SISAC.Web.Resources.Resource.Save" name="SavePolicy">
                        @VOI.SISAC.Web.Resources.Resource.Save
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/CommonFunctions")
    @Scripts.Render("~/bundles/bootstrapdtimejs")
    @Scripts.Render("~/bundles/JSDateTimeValidate")
    @Scripts.Render("~/bundles/BootstrapMultiselect")
    @Scripts.Render("~/bundles/SweetAlertJS")
    @Scripts.Render("~/bundles/CreatePolicyJS")

    <script type="text/javascript">
        var currentLang = '@cultureForm.ToString()';
    </script>

    <script>

        $(document).ready(function () {
            $('#StartDateComplementary').data("DateTimePicker").clear();
            $('#EndDateComplementary').data("DateTimePicker").clear();
            $('#StartDateReal').data("DateTimePicker").clear();
            $('#EndDateReal').data("DateTimePicker").clear();


            $("#StartDateReal").on("dp.change", function (e) {
                if (e.date) {
                    $('#StartDateComplementary').data("DateTimePicker").clear();
                    $('#EndDateComplementary').data("DateTimePicker").clear();
                    $('#EndDateReal').data("DateTimePicker").clear();

                    var date = moment(e.date).toDate();
                    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
                    $('#StartDateReal').data("DateTimePicker").minDate(firstDay);
                    $('#StartDateReal').data("DateTimePicker").maxDate(lastDay);
                    $('#EndDateReal').data("DateTimePicker").maxDate(lastDay);
                }
                else {
                    $('#StartDateReal').data("DateTimePicker").minDate(false);
                    $('#StartDateReal').data("DateTimePicker").maxDate(false);
                    $('#EndDateReal').data("DateTimePicker").minDate(false);
                    $('#EndDateReal').data("DateTimePicker").maxDate(false);
                    $('#EndDateReal').data("DateTimePicker").clear();
                    $('#StartDateComplementary').data("DateTimePicker").clear();
                    $('#EndDateComplementary').data("DateTimePicker").clear();
                }
            });
            $("#EndDateReal").on("dp.change", function (e) {
                if (e.date) {
                    $('#StartDateComplementary').data("DateTimePicker").clear();
                    $('#EndDateComplementary').data("DateTimePicker").clear();

                    var date = $("#StartDateReal").data("DateTimePicker").date();
                    if (date) {
                        date.add(1, 'd');
                        $('#EndDateReal').data("DateTimePicker").minDate(date);

                        var EndDateReal = e.date.toDate();
                        var lastDay = new Date(EndDateReal.getFullYear(), EndDateReal.getMonth() + 1, 0);
                        var EndDateRealMoment = moment(EndDateReal);
                        var lastDayMoment = moment(lastDay);
                        var daydiff = lastDayMoment.diff(EndDateRealMoment, 'days');
                        if (daydiff > 0) {
                            $("#StartDateComplementary").removeAttr("readonly");
                            $("#EndDateComplementary").removeAttr("readonly");
                            var date = $("#EndDateReal").data("DateTimePicker").date();
                            date = date.subtract(daydiff, 'd');
                            $('#StartDateComplementary').data("DateTimePicker").maxDate(date);
                        }
                        else {
                            $('#StartDateComplementary').prop('readonly', true);
                            $("#EndDateComplementary").prop("readonly", true);
                        }
                    }
                }
                else {

                    $('#StartDateComplementary').data("DateTimePicker").clear();
                    $('#EndDateComplementary').data("DateTimePicker").clear();
                }
            });
            $("#StartDateComplementary").on("dp.change", function (e) {
                if (e.date) {
                    $('#EndDateComplementary').data("DateTimePicker").clear();
                    $('#EndDateComplementary').data("DateTimePicker").maxDate(false);
                    $('#EndDateComplementary').data("DateTimePicker").minDate(false);

                    var min = $('#StartDateComplementary').data("DateTimePicker").date();
                    min = min.add(1, 'day');
                    $('#EndDateComplementary').data("DateTimePicker").minDate(min);


                }
                else {
                    $('#EndDateComplementary').data("DateTimePicker").clear();
                }
            });
            $("#EndDateComplementary").on("dp.change", function (e) {
                var startCom = $('#StartDateComplementary').data("DateTimePicker").date();
                if (startCom) {
                    if (e.date) {
                        var max = $('#EndDateReal').data("DateTimePicker").date();
                        //var min = $('#StartDateComplementary').data("DateTimePicker").date();
                        //min = min.add(1, 'day');
                        $('#EndDateComplementary').data("DateTimePicker").maxDate(max);
                        //$('#EndDateComplementary').data("DateTimePicker").minDate(min);
                    }
                }
                else {
                    $('#EndDateComplementary').data("DateTimePicker").clear();
                }
            });
        });
    </script>
}