@model VOI.SISAC.Web.Models.VO.Security.ModuleVO

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var menus = this.ViewBag.Menu as List<VOI.SISAC.Business.Dto.Security.MenuDto>;
}

@Styles.Render("~/Content/bootstrapdtimecss")

<div class="container">
    @Html.Partial("_AlertView")
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                       <p class="subtitle_h3_black">@Resource.ModuleTitle</p>
                       <p class="subtitle_h3_ancillarie">@VOI.SISAC.Web.Resources.Resource.Edit</p>
                    </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.ModuleCode, new { @class = "subtitle_h5 control-label" })
                    @Html.EditorFor(model => model.ModuleCode, new { htmlAttributes = new { @class = "form-control specialInput", @readonly = "readonly"} })
                    @Html.ValidationMessageFor(model => model.ModuleCode, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.ModuleName, new { @class = "subtitle_h5 control-label required-field" })
                     @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control specialInput", @onkeypress = "return commonFunctions.validarMaxLengthAlfanumerico(event, this, 150);", @onkeyup = "return commonFunctions.validarMaxLengthAlfanumerico(event, this, 150)" } })
                    @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.MenuCode, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    <div class="styled-select">
                        @Html.DropDownListFor(model => model.MenuCode, menus.Select(h => new SelectListItem
                            {
                                Text = h.MenuName,
                                Value = h.MenuCode
                            }), VOI.SISAC.Web.Resources.Resource.SelectItem, new { htmlAttributes = new { @class = "inputForm form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.MenuCode, "", new { @class = "text-danger text-danger-error" })
                </div>
             </div>
             <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.ControllerName, new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.ControllerName, new { htmlAttributes = new { @class = "form-control specialInput", @onkeypress = "return commonFunctions.validarMaxLengthAlfanumericoDiagonalGuion(event, this, 150);", @onkeyup = "return commonFunctions.validarMaxLengthAlfanumericoDiagonalGuion(event, this, 150)" } })
                    @Html.ValidationMessageFor(model => model.ControllerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <br />
                    <input onclick="location.href='@Url.Action("Index","Module")    '" type="reset" class="btnVolaris" value="@VOI.SISAC.Web.Resources.Resource.Back" title="@VOI.SISAC.Web.Resources.Resource.Back">
                    <input type="submit" value="@VOI.SISAC.Web.Resources.Resource.Save" title="@VOI.SISAC.Web.Resources.Resource.Save" class="btnVolaris">
                    <br />
                </div>
            </div>
        </div>
   }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/CommonFunctions")
}
