@model VOI.SISAC.Web.Models.VO.Airport.AirplaneTypeVO

@{
    ViewBag.Title = VOI.SISAC.Web.Resources.Resource.Add;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var compartmentType = this.ViewBag.CompartmentType as List<VOI.SISAC.Business.Dto.Airports.CompartmentTypeDto>;
}

<div class="container">
    @Html.Partial("_AlertView")
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <p class="subtitle_h3_black">@VOI.SISAC.Web.Resources.Resource.AirplaneTypeTitle</p>
        <p class="subtitle_h3_ancillarie">@VOI.SISAC.Web.Resources.Resource.Add</p>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.AirplaneModel, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.AirplaneModel, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarMatricula(event, this, 12, 1);", @onkeyup = "return commonFunctions.validarMatricula(event, this, 12, 1)" } })
                    @Html.ValidationMessageFor(model => model.AirplaneModel, "", new { @class = "text-danger text-danger-error" })
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.CompartmentTypeCode, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    <div class="styled-select">
                        @Html.DropDownListFor(model => model.CompartmentTypeCode, compartmentType.Select(h => new SelectListItem
                            {
                                Text = h.CompartmentTypeCode,
                                Value = h.CompartmentTypeCode
                            }), VOI.SISAC.Web.Resources.Resource.SelectItem, new { htmlAttributes = new { @class = "inputForm form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.CompartmentTypeCode, "", new { @class = "text-danger text-danger-error" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.MaximumTakeoffWeight, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.MaximumTakeoffWeight, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.MaximumTakeoffWeight, "", new { @class = "text-danger text-danger-error" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.WeightInPound, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.WeightInPound, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.WeightInPound, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.WeightInTonnes, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.WeightInTonnes, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.WeightInTonnes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.EmptyOperatingWeight, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.EmptyOperatingWeight, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.EmptyOperatingWeight, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.FilmingMaximumWeight, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.FilmingMaximumWeight, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.FilmingMaximumWeight, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.TakeoffWeightInTonnes, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.TakeoffWeightInTonnes, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.TakeoffWeightInTonnes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.GroupWeight, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.GroupWeight, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.GroupWeight, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.MaximumLandingWeight, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.MaximumLandingWeight, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.MaximumLandingWeight, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.MaximumZeroFuelWeight, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.MaximumZeroFuelWeight, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.MaximumZeroFuelWeight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.PassengerCapacity, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.PassengerCapacity, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeros(event);", @onkeyup = "return commonFunctions.validarNumeros(event)", @max = "1000", @min = "1" } })
                    @Html.ValidationMessageFor(model => model.PassengerCapacity, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.CrewCapacity, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.CrewCapacity, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeros(event);", @onkeyup = "return commonFunctions.validarNumeros(event)", @max = "1000", @min = "1" } })
                    @Html.ValidationMessageFor(model => model.CrewCapacity, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.Magnitude, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.Magnitude, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.Magnitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.FuelInLiters, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.FuelInLiters, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.FuelInLiters, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.FuelInKg, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.FuelInKg, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.FuelInKg, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.FuelInGallon, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.FuelInGallon, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2);", @onkeyup = "return commonFunctions.validarNumeroDecimal(event, this, 10, 2)" } })
                    @Html.ValidationMessageFor(model => model.FuelInGallon, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <br />
                    <input type="reset" class="btnVolaris" value="@VOI.SISAC.Web.Resources.Resource.Back" onclick="@("location.href='" + @Url.Action("Index", "AirplaneType") + "'")">
                    <input type="submit" value="@VOI.SISAC.Web.Resources.Resource.Create" class="btnVolaris">
                    <br />
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/CommonFunctions")
    @Scripts.Render("~/bundles/jqueryval")
}