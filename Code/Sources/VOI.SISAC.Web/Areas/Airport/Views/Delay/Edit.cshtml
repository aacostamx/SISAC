@model VOI.SISAC.Web.Models.VO.Airport.DelayModelVO

@{
    ViewBag.Title = Resource.DelayTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">

    @Html.Partial("_AlertView")
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.DelayVo.DelayCode, htmlAttributes: new { @class = "control-label subtitle_h5 required-field" })
                    @Html.EditorFor(model => model.DelayVo.DelayCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.DelayVo.DelayCode, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.DelayVo.DelayName, htmlAttributes: new { @class = "control-label subtitle_h5 required-field" })
                    @Html.EditorFor(model => model.DelayVo.DelayName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return commonFunctions.validarMaxLengthAlfanumericoCaracteresEspeciales(event, this, 250);", @onkeyup = "return commonFunctions.validarMaxLengthAlfanumericoCaracteresEspeciales(event, this, 250)" } })
                    @Html.ValidationMessageFor(model => model.DelayVo.DelayName, "", new { @class = "text-danger" })
                </div>
                <div id="divGroup" class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.DelayVo.FunctionalAreaID, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    <div class="styled-select">
                        @Html.DropDownListFor(model => model.DelayVo.FunctionalAreaID, Model.FuntionalAreasVo.Select(h => new SelectListItem
                   {
                       Text =  h.FunctionalAreaName + "-" + h.FunctionalAreaDescription,
                       Value = h.FunctionalAreaID.ToString()
                   }), "Seleccionar", new { htmlAttributes = new { @class = "inputForm form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.DelayVo.FunctionalAreaID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.DelayVo.UnderControl, htmlAttributes: new { @class = "subtitle_h5 control-label" })<br />
                    @if (Model.DelayVo.UnderControl)
                    {
                        <input checked="checked" class="checkVolaris top-padding" data-val="true" data-val-required="Required Field" type="checkbox" id="DelayVo_UnderControl" name="DelayVo.UnderControl" value="true" />
                    }
                    else
                    {
                        <input class="checkVolaris top-padding" data-val="true" data-val-required="Required Field" type="checkbox" id="DelayVo_UnderControl" name="DelayVo.UnderControl" value="true" />
                    }
                    <label for="DelayVo_UnderControl" class="control_gris"><span></span></label>
                    @Html.ValidationMessageFor(model => model.DelayVo.UnderControl, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                <button type="button" class="btn btn-default" name="back-btn" title="@Resource.Back" onclick="location.href='@Url.Action("Index", "Delay")'">
                    <i class="fa fa-arrow-left fa-fw"></i>&nbsp;@Resource.Back
                </button>
                <button type="submit" class="btn btn-default btn-green" name="back-btn" title="@Resource.Save">
                    <i class="fa fa-floppy-o fa-fw"></i>&nbsp;@Resource.Save
                </button>
            </div>
        </div>
    }
</div>
@Scripts.Render("~/bundles/CommonFunctions")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
