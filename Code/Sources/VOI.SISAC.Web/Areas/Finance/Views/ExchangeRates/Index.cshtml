@model IEnumerable<VOI.SISAC.Web.Models.VO.Finance.ExchangeRatesVO>

@{
    ViewBag.Title = Resource.ExchangeRatesTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cultureForm = VOI.SISAC.Web.Helpers.CultureHelper.GetCurrentCulture();
}

@Styles.Render("~/Content/bootstraptablecss")

<div class="container">
    @Html.Partial("_AlertView")

    <h2 class="subtitle_h3_black">@Resource.ExchangeRatesTitle</h2>
    <div id="toolbar">
        @if (User.IsInRole("EXCHRATE-ADD"))
        {
            <button id="btnAddExchangeRates" type="button" class="btn btn-default" name="@Resource.Add" title="@Resource.Add" onclick="location.href='@Url.Action("Create", "ExchangeRates")'">
                <i class="fa fa-plus fa-fw"></i>
                &nbsp;@Resource.Add
            </button>
        }
    </div>

    <table id="tbExchangeRates"
           class="table"
           data-toolbar="#toolbar"
           data-show-columns="true"
           data-search="true"
           data-show-toggle="true"
           data-toggle="table"
           data-mobile-responsive="true"
           data-pagination="true"
           data-show-pagination-switch="true"
           data-page-size="10">
        <thead>
            <tr>
                <th data-field="Actions" data-align="center" data-halign="center" data-formatter="commonFunctions.actionsButtons">
                    <strong>@Resource.Actions</strong>
                </th>
                <th data-field="Year" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.Year)</strong>
                </th>
                <th data-field="Month" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Resource.MonthNumber</strong>
                </th>
                <th data-field="ExchangeDate" data-halign="left" data-align="left" data-sortable="true">
                    <strong>@Resource.Month</strong>
                </th>
                <th data-field="CurrencyCode" data-halign="center" data-align="center" data-sortable="true" data-visible="false">
                    <strong>@Html.DisplayNameFor(model => model.Currency.CurrencyCode)</strong>
                </th>
                <th data-field="CurrencyName" data-halign="left" data-align="left" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.Currency.CurrencyName)</strong>
                </th>
                <th data-field="Rate" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.Rate)</strong>
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td id="Actions"></td>
                        <td>
                            @Html.DisplayFor(modelitem => item.Year)
                        </td>
                        <td>
                            @Html.DisplayFor(modelitem => item.Month)
                        </td>
                        <td>
                            @{
                                var dateExchange = item.ExchangeDate.ToString("MMMM").ToUpper();
                            }

                            @dateExchange
                        </td>
                        <td>
                            @Html.DisplayFor(modelitem => item.Currency.CurrencyCode)
                        </td>
                        <td>
                            @item.Currency.CurrencyName - @item.Currency.CurrencyCode
                        </td>
                        <td>
                            @item.Rate.ToString().Remove(@item.Rate.ToString().Length - 1)
                        </td>
                    </tr>
                                    }
                                }
        </tbody>
    </table>
    <!-- context menu -->
    <ul id="context-menu" class="dropdown-menu">
        @if (User.IsInRole("EXCHRATE-UPD"))
        {
            <li data-item="@Resource.Edit"><a><i class="fa fa-pencil fa-fw"></i>&nbsp;@Resource.Edit</a></li>
        }
        @if (User.IsInRole("EXCHRATE-DEL"))
        {
            <li data-item="@Resource.Delete"><a><i class="fa fa-trash fa-fw"></i>&nbsp;@Resource.Delete</a></li>
        }
    </ul>
</div>

@Scripts.Render("~/bundles/bootstrapTable")
@Scripts.Render("~/bundles/bootstrapTablePlugins")
@Scripts.Render("~/bundles/ExportTable")
@Scripts.Render("~/bundles/BootstrapContextMenu")
@Scripts.Render("~/bundles/CommonFunctions")
@Scripts.Render("~/bundles/ExchangeRatesJS")

<script>
    var currentLang = '@cultureForm.ToString()';

    $('#tbExchangeRates').bootstrapTable({
        contextMenu: '#context-menu',
        contextMenuButton: '.menuButton',
        contextMenuAutoClickRow: true,
        contextMenuTrigger: 'right',
        onContextMenuItem: function (row, $el) {
            if ($el.data("item") == '@Resource.Edit') {
                var url = '@Url.Action("Edit", "ExchangeRates")';
                url = url.concat('?Year=' + row.Year.trim());
                url = url.concat('&Month=' + row.Month.trim());
                url = url.concat('&CurrencyCode=' + row.CurrencyCode.trim());
                window.location = url;
            }
            if ($el.data("item") == '@Resource.Delete') {
                var url = '@Url.Action("Delete", "ExchangeRates")';
                url = url.concat('?Year=' + row.Year.trim());
                url = url.concat('&Month=' + row.Month.trim());
                url = url.concat('&CurrencyCode=' + row.CurrencyCode.trim());
                window.location = url;
            }
        }
    })
</script>