@model VOI.SISAC.Web.Models.VO.Catalog.ReconciliationToleranceVO

@{
    ViewBag.Title = Resource.Add;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cultureForm = VOI.SISAC.Web.Helpers.CultureHelper.GetCurrentCulture();
    var currency = this.ViewBag.Currency as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>;
    var service = this.ViewBag.Service as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>;
    var tolerance = this.ViewBag.Tolerance as List<VOI.SISAC.Business.Dto.Catalogs.GenericCatalogDto>;
}

@Styles.Render("~/Content/bootstrapdtimecss")

<div class="container">
    @Html.Partial("_AlertView")
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <p class="subtitle_h3_black">@Resource.ReconciliationToleranceTitle</p>
        <p class="subtitle_h3_ancillarie">@Resource.Add</p>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.Service.ServiceCode, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    <div class="styled-select">
                        @Html.DropDownListFor(model => model.ServiceCode, service.Select(h => new SelectListItem
                   {
                       Text = h.DescriptionAndCode,
                       Value = h.Id
                   }), Resource.SelectItem, new { @class = "inputForm form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ServiceCode, "", new { @class = "text-danger text-danger-error" })
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.Currency.CurrencyName, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    <div class="styled-select">
                        @Html.DropDownListFor(model => model.CurrencyCode, currency.Select(h => new SelectListItem
                   {
                       Text = h.DescriptionAndCode,
                       Value = h.Id
                   }), Resource.SelectItem, new { @class = "inputForm form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.CurrencyCode, "", new { @class = "text-danger text-danger-error" })
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.ToleranceType.ToleranceTypeCode, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    <div class="styled-select">
                        @Html.DropDownListFor(model => model.ToleranceTypeCode, tolerance.Select(h => new SelectListItem
                   {
                       Text = h.DescriptionAndCode,
                       Value = h.Id
                   }), Resource.SelectItem, new { @class = "inputForm form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ToleranceTypeCode, "", new { @class = "text-danger text-danger-error" })                    
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.ToleranceValue, htmlAttributes: new { @class = "subtitle_h5 control-label required-field" })
                    @Html.EditorFor(model => model.ToleranceValue, new { htmlAttributes = new { @class = "form-control", @min = 0, @max = 1000, @onkeypress = "return commonFunctions.validarMaxLengthNumerico(event, this, 3, 0);", @onkeyup = "return commonFunctions.validarMaxLengthNumerico(event, this, 3, 0);" } })
                    @Html.ValidationMessageFor(model => model.ToleranceValue, "", new { @class = "text-danger" })                  
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                   
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <br />
                <input type="reset" class="btnVolaris" value="@Resource.Back" onclick="@("location.href='" + @Url.Action("Index", "ReconciliationTolerance") + "'")" />
                <input type="submit" value="@Resource.Create" class="btnVolaris" />
                <br />
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrapdtimejs")
    @Scripts.Render("~/bundles/CommonFunctions")

    <script>
        $(function () {
            var currentLang = '@cultureForm.ToString()';            
        });
    </script>
}

