@model IEnumerable<VOI.SISAC.Web.Models.VO.Catalog.ReconciliationToleranceVO>

@{
    ViewBag.Title = Resource.ReconciliationToleranceTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cultureForm = VOI.SISAC.Web.Helpers.CultureHelper.GetCurrentCulture();
}

@Styles.Render("~/Content/bootstraptablecss")

<div class="container">
    @Html.Partial("_AlertView")

    <h2 class="subtitle_h3_black">@Resource.ReconciliationToleranceTitle</h2>
    <div id="toolbar">
        @if (User.IsInRole("RECTOLE-ADD"))
        {
            <button id="btnReconciliationTolerance" type="button" class="btn btn-default" name="@Resource.Add" title="@Resource.Add" onclick="location.href='@Url.Action("Create", "ReconciliationTolerance")'">
                <i class="fa fa-plus fa-fw"></i>
                &nbsp;@Resource.Add
            </button>
        }
    </div>

    <table id="tbReconciliationTolerance"
           class="table"
           data-toolbar="#toolbar"
           data-show-columns="true"
           data-search="true"
           data-show-toggle="true"
           data-toggle="table"
           data-mobile-responsive="true"
           data-pagination="true"
           data-show-pagination-switch="true"
           data-page-size="10">
        <thead>
            <tr>
                <th data-field="Actions" data-align="center" data-halign="center" data-formatter="commonFunctions.actionsButtons">
                    <strong>@Resource.Actions</strong>
                </th>
                <th data-field="ServiceCode" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.ServiceCode)</strong>
                </th>
                <th data-field="ServiceName" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.Service.ServiceName)</strong>
                </th>
                <th data-field="CurrencyCode" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.CurrencyCode)</strong>
                </th>
                <th data-field="ToleranceTypeCode" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.ToleranceTypeCode)</strong>
                </th>
                <th data-field="ToleranceValue" data-halign="center" data-align="center" data-sortable="true">
                    <strong>@Html.DisplayNameFor(model => model.ToleranceValue)</strong>
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td id="Actions"></td>
                        <td>
                            @Html.DisplayFor(modelitem => item.ServiceCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelitem => item.Service.ServiceName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelitem => item.CurrencyCode)
                        </td>                        
                        <td>
                            @Html.DisplayFor(modelitem => item.ToleranceTypeCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelitem => item.ToleranceValue)
                        </td>
                    </tr>
                                    }
                                }
        </tbody>
    </table>
    <!-- context menu -->
    <ul id="context-menu" class="dropdown-menu">
        @if (User.IsInRole("RECTOLE-UPD"))
        {
            <li data-item="@Resource.Edit"><a><i class="fa fa-pencil fa-fw"></i>&nbsp;@Resource.Edit</a></li>
        }
        @if (User.IsInRole("RECTOLE-DEL"))
        {
            <li data-item="@Resource.Delete"><a><i class="fa fa-trash fa-fw"></i>&nbsp;@Resource.Delete</a></li>
        }
    </ul>
</div>

@Scripts.Render("~/bundles/bootstrapTable")
@Scripts.Render("~/bundles/bootstrapTablePlugins")
@Scripts.Render("~/bundles/ExportTable")
@Scripts.Render("~/bundles/BootstrapContextMenu")
@Scripts.Render("~/bundles/CommonFunctions")
@Scripts.Render("~/bundles/ReconciliationToleranceJS")

<script>
    var currentLang = '@cultureForm.ToString()';

    $('#tbReconciliationTolerance').bootstrapTable({
        contextMenu: '#context-menu',
        contextMenuButton: '.menuButton',
        contextMenuAutoClickRow: true,
        contextMenuTrigger: 'right',
        onContextMenuItem: function (row, $el) {
            if ($el.data("item") == '@Resource.Edit') {
                var url = '@Url.Action("Edit", "ReconciliationTolerance")';
                url = url.concat('?serviceCode=' + row.ServiceCode.trim());
                url = url.concat('&currencyCode=' + row.CurrencyCode.trim());
                url = url.concat('&toleranceTypeCode=' + row.ToleranceTypeCode.trim());
                window.location = url;
            }
            if ($el.data("item") == '@Resource.Delete') {
                var url = '@Url.Action("Delete", "ReconciliationTolerance")';
                url = url.concat('?serviceCode=' + row.ServiceCode.trim());
                url = url.concat('&currencyCode=' + row.CurrencyCode.trim());
                url = url.concat('&toleranceTypeCode=' + row.ToleranceTypeCode.trim());
                window.location = url;                
            }
        }
    })
</script>